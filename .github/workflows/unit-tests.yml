name: Unit Tests
concurrency:
  group: unittests-${{ github.repository }}

on:
  push:
    branches:
      - master
  schedule:
    - cron: '1 22 * * 1-5'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch under test:'
        required: false
        default: develop
        type: string

env:
  KUBERNETES_VERSION: "1.24.3"
  MINIKUBE_VERSION: "1.26.1"

jobs:
  workflow-inputs:
    name: Display Workflow Inputs
    runs-on: ubuntu-20.04
    if: github.event.inputs != ''

    steps:
      - name: Output inputs
        run: |-
          echo "## Workflow inputs" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ toJSON(github.event.inputs) }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  test:
    name: Test
    runs-on: ubuntu-22.04
    container: hub.opensciencegrid.org/slate/slate-client-server:2.0.2

    steps:
      - name: Check out repo
        if: ${{ github.event.inputs.branch == '' }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: ./checkout

      - name: Check out specific branch of repo
        if: ${{ github.event.inputs.branch != '' }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: ./checkout
          ref: ${{ github.event.inputs.branch }}

      - name: Build SLATE binaries
        working-directory: ./checkout/build
        run: |-
          cmake .. -DBUILD_CLIENT=True -DBUILD_SERVER=True -DBUILD_SERVER_TESTS=True -DSTATIC_CLIENT=False
          export VERSION_OVERRIDE=localdev
          make

      - id: minikube
        name: Create Minikube Cluster
        uses: medyagh/setup-minikube@master
        with:
          minikube-version: ${{ env.MINIKUBE_VERSION }}
          driver: docker
          container-runtime: containerd
          kubernetes-version: "v${{ env.KUBERNETES_VERSION }}"
          cni: calico

      - name: Display Kubeconfig
        working-directory: .
        run: |-
          kubectl config view > kubeconfig
          cat kubeconfig

      - name: Run tests
        timeout-minutes: 60
        working-directory: ./checkout/build
        env:
          DYNAMODB_JAR: "${{ github.workspace }}/dynamodb/DynamoDBLocal.jar"
          DYNAMODB_LIB: "${{ github.workspace }}/dynamodb/DynamoDBLocal_lib"
          SLATE_SCHEMA_DIR: "${{ github.workspace }}/checkout/resources/api_specification"
          TEST_SRC: "${{ github.workspace }}/checkout/test"
        run: make check

  notifications:
    name: Notifications
    runs-on: ubuntu-20.04
    needs:
      - test
    if: false
#    if: ${{ always() && (needs.build.result == 'failure' || needs.test.result == 'failure') }}

    steps:
      - name: Notify Slack of Failure
        uses: slateci/github-actions/.github/actions/slack-notify-failure@v9
        with:
          slack_bot_token: '${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}'
