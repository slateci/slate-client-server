name: Build AWS C++ SDK
concurrency:
  group: aws-${{ github.repository }}

on:
  workflow_dispatch:
    inputs:
      aws_cpp_sdk_version:
        description: The version of the AWS C++ SDK to build.
        required: false
        default: 1.9.365
        type: string

jobs:
  workflow-inputs:
    name: Display Workflow Inputs
    runs-on: ubuntu-20.04

    steps:
      - name: Output inputs
        run: |-
          echo "## Workflow inputs" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ toJSON(github.event.inputs) }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  build-centos7:
    name: Build on CentOS 7
    runs-on: ubuntu-20.04
    container: centos:7

    steps:
      - name: Install OS Packages
        run: |-
          yum update -y
          yum install epel-release -y
          yum install boost-devel -y \
            cmake3 \
            gcc-c++.x86_64 \
            git \
            libcurl-devel \
            make \
            openssl-devel \
            unzip \
            yaml-cpp-devel \
            zlib-devel

      - name: Create extra directories
        working-directory: .
        run: |-
          mkdir ./aws

      - name: Download source
        working-directory: .
        run: |-
          curl -fsSL https://github.com/aws/aws-sdk-cpp/archive/${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz -o ${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz
          tar -zxf ${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz --directory ./aws

      - name: Pre-fetch crt dependency
        working-directory: ./aws/aws-sdk-cpp-${{ github.event.inputs.aws_cpp_sdk_version }}
        run: |-
          ./prefetch_crt_dependency.sh

      - name: Build from source
        working-directory: ./aws
        run: |-
          mkdir ./build
          cd ./build
          cmake3 ../aws-sdk-cpp-${{ github.event.inputs.aws_cpp_sdk_version }} -DBUILD_ONLY="dynamodb;route53" -DBUILD_SHARED_LIBS=Off
          make

      - name: Create tarball
        working-directory: .
        run: |-
          tar -czvf centos7-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz ./aws
          ls -al ./aws

      - name: Persist built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: centos7
          path: |-
            ./centos7-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz
          retention-days: 1

  build-rocky9:
    name: Build on Rocky 9
    runs-on: ubuntu-20.04
    container: rockylinux:9

    steps:
      - name: Install OS Packages
        run: |-
          dnf update -y
          dnf install epel-release -y
          dnf install boost-devel -y \
            cmake3 \
            gcc-c++.x86_64 \
            git \
            libcurl-devel \
            make \
            openssl-devel \
            unzip \
            yaml-cpp-devel \
            zlib-devel

      - name: Create extra directories
        working-directory: .
        run: |-
          mkdir ./aws

      - name: Download source
        working-directory: .
        run: |-
          curl -fsSL https://github.com/aws/aws-sdk-cpp/archive/${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz -o ${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz
          tar -zxf ${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz --directory ./aws

      - name: Pre-fetch crt dependency
        working-directory: ./aws/aws-sdk-cpp-${{ github.event.inputs.aws_cpp_sdk_version }}
        run: |-
          ./prefetch_crt_dependency.sh

      - name: Build from source
        working-directory: ./aws
        run: |-
          mkdir ./build
          cd ./build
          cmake3 ../aws-sdk-cpp-${{ github.event.inputs.aws_cpp_sdk_version }} -DBUILD_ONLY="dynamodb;route53" -DBUILD_SHARED_LIBS=Off
          make

      - name: Create tarball
        working-directory: .
        run: |-
          tar -czvf rocky9-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz ./aws
          ls -al ./aws

      - name: Persist built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rocky9
          path: |-
            ./rocky9-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz
          retention-days: 1

  build-ubuntu20_04:
    name: Build on Ubuntu 20.04
    runs-on: ubuntu-20.04

    steps:
      - name: Install OS Packages
        run: |-
          sudo apt-get update -y
          sudo apt-get install -y \
            cmake \
            g++ \
            libboost-all-dev \
            libcurl4-openssl-dev \
            libssl-dev \
            libyaml-cpp-dev \
            libz-dev

      - name: Create extra directories
        working-directory: .
        run: |-
          mkdir ./aws

      - name: Download source
        working-directory: .
        run: |-
          curl -fsSL https://github.com/aws/aws-sdk-cpp/archive/${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz -o ${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz
          tar -zxf ${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz --directory ./aws

      - name: Pre-fetch crt dependency
        working-directory: ./aws/aws-sdk-cpp-${{ github.event.inputs.aws_cpp_sdk_version }}
        run: |-
          ./prefetch_crt_dependency.sh

      - name: Build from source
        working-directory: ./aws
        run: |-
          mkdir ./build
          cd ./build
          cmake ../aws-sdk-cpp-${{ github.event.inputs.aws_cpp_sdk_version }} -DBUILD_ONLY="dynamodb;route53" -DBUILD_SHARED_LIBS=Off
          make

      - name: Create tarball
        working-directory: .
        run: |-
          tar -czvf ubuntu20_04-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz ./aws
          ls -al ./aws

      - name: Persist built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu20_04
          path: |-
            ./ubuntu20_04-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz
          retention-days: 1

  deploy:
    name: Deploy to GitHub
    runs-on: ubuntu-20.04
    needs:
      - build-centos7
      - build-rocky9
      - build-ubuntu20_04

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download CentOS 7 Build
        uses: actions/download-artifact@v3
        with:
          name: centos7
          path: .

      - name: Download Rocky 9 Build
        uses: actions/download-artifact@v3
        with:
          name: rocky9
          path: .

      - name: Download Ubuntu Build
        uses: actions/download-artifact@v3
        with:
          name: ubuntu20_04
          path: .

      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: ./checkout
          ref: gh-pages

      - name: Configure Git
        uses: slateci/github-actions/.github/actions/configure-git@v9

      - name: Commit artifacts
        working-directory: ./checkout
        run: |-
          cp ../centos7-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz ./aws-cpp-sdk/
          cp ../rocky9-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz ./aws-cpp-sdk/
          cp ../ubuntu20_04-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz ./aws-cpp-sdk/
          
          git add --all
          git commit -m '(github-action) Added AWS C++ SDK ${{ github.event.inputs.aws_cpp_sdk_version }} artifacts.'
          git push
          
          echo "Download artifacts from [https://slateci.io/slate-client-server/](https://slateci.io/slate-client-server/) once the GitHub pages action is complete." >> $GITHUB_STEP_SUMMARY
