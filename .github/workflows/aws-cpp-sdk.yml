name: Build AWS C++ SDK
concurrency:
  group: aws-${{ github.repository }}

on:
  workflow_dispatch:
    inputs:
      aws_cpp_sdk_version:
        description: The version of the AWS C++ SDK to build.
        required: false
        default: 1.9.365
        type: string

env:
  AWS_CLIENTS: "dynamodb;route53"

jobs:
  workflow-inputs:
    name: Display Workflow Inputs
    runs-on: ubuntu-20.04

    steps:
      - name: Output inputs
        run: |-
          echo "## Workflow inputs" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ toJSON(github.event.inputs) }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  build-el:
    name: Build on EL
    runs-on: ubuntu-20.04
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - container: centos:7
            file-prefix: centos7
          - container: rockylinux:9
            file-prefix: rocky9

    steps:
      - name: Install OS Packages
        run: |-
          yum update -y
          yum install epel-release -y
          yum install boost-devel -y \
            cmake3 \
            gcc-c++.x86_64 \
            git \
            libcurl-devel \
            make \
            openssl-devel \
            unzip \
            yaml-cpp-devel \
            zlib-devel

      - name: Create extra directories
        working-directory: .
        run: |-
          mkdir -p ./aws/build
          mkdir -p ./aws/install-artifacts

      - name: Build/install from source
        working-directory: ./aws
        run: |-
          git clone https://github.com/aws/aws-sdk-cpp.git
          cd aws-sdk-cpp
          git submodule update --init --recursive
          git checkout tags/${{ github.event.inputs.aws_cpp_sdk_version }}
          cd ../build
          cmake3 ../aws-sdk-cpp \
            -DBUILD_ONLY="${{ env.AWS_CLIENTS }}" \
            -DBUILD_SHARED_LIBS=Off \
            -DCMAKE_INSTALL_PREFIX=../install-artifacts \
            -DCMAKE_PREFIX_PATH=${{ github.workspace }}/aws/aws-sdk-cpp \
            -DENABLE_TESTING=Off
          make
          make install

      - name: Create tarball
        working-directory: ./aws
        run: |-
          ls -al ./install-artifacts/
          tar -czvf ${{ matrix.file-prefix }}-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz ./install-artifacts/
          ls -al
          mv ${{ matrix.file-prefix }}-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz ../

      - name: Persist built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.file-prefix }}
          path: |-
            ./${{ matrix.file-prefix }}-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz
          retention-days: 1

  build-ubuntu:
    name: Build on Ubuntu
    runs-on: ${{ matrix.distro }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - distro: ubuntu-20.04
            file-prefix: ubuntu20_04
          - distro: ubuntu-22.04
            file-prefix: ubuntu22_04

    steps:
      - name: Install OS Packages
        run: |-
          sudo apt-get update -y
          sudo apt-get install -y \
            cmake \
            g++ \
            libboost-all-dev \
            libcurl4-openssl-dev \
            libssl-dev \
            libyaml-cpp-dev \
            libz-dev

      - name: Create extra directories
        working-directory: .
        run: |-
          mkdir -p ./aws/build
          mkdir -p ./aws/install-artifacts

      - name: Build/install from source
        working-directory: ./aws
        run: |-
          git clone https://github.com/aws/aws-sdk-cpp.git
          cd aws-sdk-cpp
          git submodule update --init --recursive
          git checkout tags/${{ github.event.inputs.aws_cpp_sdk_version }}
          cd ../build
          cmake ../aws-sdk-cpp \
            -DBUILD_ONLY="${{ env.AWS_CLIENTS }}" \
            -DBUILD_SHARED_LIBS=Off \
            -DCMAKE_INSTALL_PREFIX=../install-artifacts \
            -DCMAKE_PREFIX_PATH=${{ github.workspace }}/aws/aws-sdk-cpp \
            -DENABLE_TESTING=Off
          make
          make install

      - name: Create tarball
        working-directory: ./aws
        run: |-
          ls -al ./install-artifacts/
          tar -czvf ${{ matrix.file-prefix }}-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz ./install-artifacts/
          ls -al
          mv ${{ matrix.file-prefix }}-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz ../

      - name: Persist built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.file-prefix }}
          path: |-
            ./${{ matrix.file-prefix }}-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz
          retention-days: 1

  deploy:
    name: Deploy to GitHub
    runs-on: ubuntu-20.04
    needs:
      - build-el
      - build-ubuntu

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download CentOS 7 Build
        uses: actions/download-artifact@v3
        with:
          name: centos7
          path: .

      - name: Download Rocky 9 Build
        uses: actions/download-artifact@v3
        with:
          name: rocky9
          path: .

      - name: Download Ubuntu 20.04 Build
        uses: actions/download-artifact@v3
        with:
          name: ubuntu20_04
          path: .

      - name: Download Ubuntu 22.04 Build
        uses: actions/download-artifact@v3
        with:
          name: ubuntu22_04
          path: .

      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: ./checkout
          ref: gh-pages

      - name: Configure Git
        uses: slateci/github-actions/.github/actions/configure-git@v11

      - name: Commit artifacts
        working-directory: ./checkout
        run: |-
          for DISTRIBUTION in centos7 rocky9 ubuntu20_04 ubuntu22_04
          do
            cp ../$DISTRIBUTION-${{ github.event.inputs.aws_cpp_sdk_version }}.tar.gz ./aws-cpp-sdk/
          done
          
          git add --all
          git commit -m '(github-action) Added AWS C++ SDK ${{ github.event.inputs.aws_cpp_sdk_version }} artifacts.'
          git push
          
          echo "Download artifacts from [https://slateci.io/slate-client-server/](https://slateci.io/slate-client-server/) once the GitHub pages action is complete." >> $GITHUB_STEP_SUMMARY
