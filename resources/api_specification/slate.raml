#%RAML 1.0
---
title: SLATE API
baseUri: http://127.0.0.1:18080/{version}
version: v1alpha3

/users:
  get:
    description: List users
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
      group:
        displayName: Virtual Organization
        type: string
        description:
        required: false	
    responses:
      200:
        description: List of users
        body:
          application/json:
            type: !include UserListResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
  post:
    description: Add a user
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    body:
      # only a current admin user is authorized to create other users
      application/json:
        type: !include UserCreateRequestSchema.json
    responses:
      200:
        description: Success
        body:
          application/json:
            type: !include UserInfoResultSchema.json
      400: 
        description: Insufficient information
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Missing attributes to create user account"
              }
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
  /{userID}:
    get:
      # only the user or an admin should be allowed to fetch detailed user info
      description: Get user's detailed information
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Normal success
          body:
            application/json: 
              type: !include UserInfoResult.json
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404:
          description: User not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "User not found"
                }
    put:
      description: Update a user's information
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      body:
        # only a current admin user is authorized to change another users's admin privileges
        application/json:
          type: !include UserUpdateRequestSchema.json
      responses:
        200:
          description: Success
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404: 
          description: User not found
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "User not found"
                }
    delete:
      description: Remove a user
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Success
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404: 
          description: User not found
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "User not found"
                }
    /groups:
      get:
        description: List groups to which the user belongs
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
          user:
            displayName: User's groups flag
            type: boolean
            description: Whether to limit results to groups the user is part of
            required: false	    
        responses:
          200:
            description: success
            body:
              application/json:
                type: !include GroupMembershipListResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Not authorized"
                  }
          404:
            description: User not found
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "User not found"
                  }    
      /{groupID}:
        put:
          description: Add a Group membership
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
                  example: |
                    {
                      "kind": "Error",
                      "message": "Not authorized"
                    }
            404:
              description: User or Group not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
                  example: |
                    {
                      "kind": "Error",
                      "message": "User not found"
                    }
        delete:
          description: Remove a Group membership
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
                  example: |
                    {
                      "kind": "Error",
                      "message": "Not authorized"
                    }
            404:
              description: User or Group membership not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
                  example: |
                    {
                      "kind": "Error",
                      "message": "User not found"
                    }
    /replace_token:
      get:
        description: Revoke old access token and issue a new one
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: Updated credentials for the user
            body:
              application/json: !include FindUserResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Not authorized"
                  }
          404:
            description: User not found error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "User not found"
                  }
/whoami:
  get:
    description: Fetch requester's profile
    queryParameters: 
      token:
        displayName: AccessToken
        type: string
        description: User's authentication token
        required: true
    responses: 
      200:
        description: Obtained user profile
        body:
          application/json: !include UserInfoResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
/find_user:
  get:
    description: Look up a user account by globus ID
    # only admin users are permitted to use this request
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
      globus_id:
        displayName: Globus ID
        type: string
        description: User's globus UUID
        required: true
    responses:
      200:
        description: Credentials for the relevent user
        body:
          application/json: !include FindUserResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
      404:
        description: User not found error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "User not found"
              }
/clusters:
  get: # slate cluster list
    description: List clusters
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
      group:
        displayName: Virtual Organization
        type: string
        description: return only clusters which this Group is allowed to access
        required: false
    responses:
      200:
        description: List of clusters
        body:
          application/json: !include ClusterListResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
  post: # slate cluster create
    description: Create a cluster
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    body:
      application/json:
        type: !include ClusterCreateRequestSchema.json
    responses:
      200:
        description: Normal success
        body:
          application/json:
            type: !include ClusterCreateResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
      409:
        description: Name collision error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Cluster name is already in use"
              }
  /{clusterID}:
    get:
      description: Fetch a cluster's information
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Success
          body:
            application/json:
              type: !include ClusterInfoResultSchema.json
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
        404: 
          description: Cluster not found
          body:
            application/json:
              type: !include ErrorResultSchema.json
    delete: # slate cluster delete
      description: Destroy a cluster
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Normal success
          body:
            application/json:
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404:
          description: Cluster not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Cluster not found"
                }
    put:
      description: Update a cluster's information
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      body:
        application/json:
          type: !include ClusterUpdateRequestSchema.json
      responses:
        200:
          description: Success
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404: 
          description: Cluster not found
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "User not found"
                }
    /allowed_groups:
      get:
        description: List groups allowed to use this cluster
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: List of groups
            body:
              application/json: !include GroupMembershipListResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Not authorized"
                  }
          404:
            description: Cluster not found
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Cluster not found"
                  }
      /{groupID}:
        put:
          description: Add a Group to the cluster's whitelist
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
                  example: |
                    {
                      "kind": "Error",
                      "message": "Not authorized"
                    }
            404:
              description: Cluster or Group not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
                  example: |
                    {
                      "kind": "Error",
                      "message": "Group not found"
                    }
        delete:
          description: Remove a Group from the cluster's whitelist
          queryParameters:
            token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
                  example: |
                    {
                      "kind": "Error",
                      "message": "Not authorized"
                    }
            404:
              description: Cluster or Group not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
                  example: |
                    {
                      "kind": "Error",
                      "message": "Group not found"
                    }
        /applications:
          get:
            description: List applications this Group is allowed to use on this cluster
            queryParameters:
              token:
                displayName: Access Token
                type: string
                description: User's authentication token
                required: true
            responses:
              200:
                description: Success
                body:
                  application/json: !include AllowedAppListResultSchema.json
              403:
                description: Authentication/authorization error
                body:
                  application/json:
                    type: !include ErrorResultSchema.json
                    example: |
                      {
                        "kind": "Error",
                        "message": "Not authorized"
                      }
              404:
                description: Cluster or Group not found
                body:
                  application/json:
                    type: !include ErrorResultSchema.json
                    example: |
                      {
                        "kind": "Error",
                        "message": "Group not found"
                      }
          /{appName}:
            put:
              description: Add an application to the set of those this Group is allowed to use
              queryParameters:
                token:
                  displayName: Access Token
                  type: string
                  description: User's authentication token
                  required: true
              responses:
                200:
                  description: Success
                403:
                  description: Authentication/authorization error
                  body:
                    application/json:
                      type: !include ErrorResultSchema.json
                      example: |
                        {
                          "kind": "Error",
                          "message": "Not authorized"
                        }
                404:
                  description: Cluster or Group not found
                  body:
                    application/json:
                      type: !include ErrorResultSchema.json
                      example: |
                        {
                          "kind": "Error",
                          "message": "Group not found"
                        }
            delete:
              description: Remove an application from the set of those this Group is allowed to use
              queryParameters:
                token:
                  displayName: Access Token
                  type: string
                  description: User's authentication token
                  required: true
              responses:
                200:
                  description: Success
                403:
                  description: Authentication/authorization error
                  body:
                    application/json:
                      type: !include ErrorResultSchema.json
                      example: |
                        {
                          "kind": "Error",
                          "message": "Not authorized"
                        }
                404:
                  description: Cluster or Group not found
                  body:
                    application/json:
                      type: !include ErrorResultSchema.json
                      example: |
                        {
                          "kind": "Error",
                          "message": "Group not found"
                        }
    /ping:
      get:
        description: Check whether the platform can connect to this cluster
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
          cache:
            displayName: Allow cached results
            description: Return a cached result from a previous check if available
            required: false
        responses:
          200:
            description: Connectivity result
            body:
              application/json: !include ClusterPingResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Not authorized"
                  }
          404:
            description: Cluster not found
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Cluster not found"
                  }
    /monitoring_credential:
      get:
        description: Get the monitoring credential assigned to this cluster, allocating one if necessary
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: Credential data
            body:
              application/json: !include MonitoringCredentialResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Not authorized"
                  }
          404:
            description: Cluster not found
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Cluster not found"
                  }
      delete:
        description: Remove the monitoring credential assigned to this cluster
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: Success
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Not authorized"
                  }
          404:
            description: Cluster not found
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Cluster not found"
                  }
/groups:
  get: # slate group list
    description: List existing groups
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    responses:
      200:
        description: List of groups
        body:
          application/json: !include GroupListResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
  post: # slate group create
    description: Create a group
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    body:
      application/json:
        type: !include GroupCreateRequestSchema.json
    responses:
      200:
        description: Normal success
        body:
          application/json:
            type: !include GroupCreateResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
      409:
        description: Name collision error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Group name is already in use"
              }
  /{groupID}:
    get:
      description: Fetch a Group's information
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Success
          body:
            application/json:
              type: !include GroupInfoResultSchema.json
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
        404: 
          description: Group not found
          body:
            application/json:
              type: !include ErrorResultSchema.json
    put:
      description: Update a Group's information
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      body:
        application/json:
          type: !include GroupUpdateRequestSchema.json
      responses:
        200:
          description: Success
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
        404: 
          description: Group not found
          body:
            application/json:
              type: !include ErrorResultSchema.json
    delete: # slate group delete
      description: Destroy a group
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Normal success
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404:
          description: Group not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Group not found"
                }
    /members:
      get:
        description: List the users who belong to a group
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: Normal success
            body:
              application/json:
                type: !include UserListResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Not authorized"
                  }
          404:
            description: Group not found error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Group not found"
                  }
    /clusters:
      get:
        description: List the cluster owned by a group
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: Normal success
            body:
              application/json:
                type: !include ClusterListResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Not authorized"
                  }
          404:
            description: Group not found error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Group not found"
                  }
    # TODO: what other actions are required for administering groups?
/apps:
  get: # app list
    description: List known applications
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: false
      dev:
        displayName: Development flag
        type: boolean
        description: Whether to search the developer repository
        required: false
    responses:
      200:
        description: List of available applications
        body:
          application/json: !include AppListResultSchema.json
  /{appName}:
    get: # slate app conf
      description: Get an application's configuration
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: false
        dev:
          displayName: Development flag
          type: boolean
          description: Whether to search the developer repository
          required: false
      responses:
        200: # normal success
          body:
            application/json:
              type: !include AppConfResultSchema.json
        404: # appName is not known
          description: Application not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Application not found"
                }
    post: # slate app install
      description: Install an application
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
        dev:
          displayName: Development flag
          description: Whether to search the development repository
          required: false
      body:
        application/json:
          type: !include AppInstallRequestSchema.json
      responses:
        200: # normal success
          body:
            application/json:
              type: !include AppInstallResultSchema.json
        400: 
          description: Unknown Group or cluster
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Invalid Group"
                }
        403: # if authentication or authorization fails
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404: # if appName is not known
          description: Application not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Application not found"
                }
    /info:
      get:
        description: Get an application's readme
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: false
          dev:
            displayName: Development flag
            type: boolean
            description: Whether to search the development repository
            required: false
        responses:
          200: # normal success
            body:
              application/json:
                type: !include AppInfoResultSchema.json
          404: # if appName is not known
            description: Application not found error
            body:
              application/json:
                type: !include ErrorResultSchema.json
  /ad-hoc:
    post: # slate app install
      description: Install an application
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      body:
        application/json:
          type: !include AdHocAppInstallRequestSchema.json
      responses:
        200: # normal success
          body:
            application/json:
              type: !include AppInstallResultSchema.json
        400: 
          description: Unknown Group or cluster
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Invalid Group"
                }
        403: # if authentication or authorization fails
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404: # if appname is not known?
          description: Application not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Application not found"
                }
/update_apps:
  post:
    description: Update the helm repositories which make up the application catalog
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    responses:
      200:
        description: Success
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
      500:
        description: Helm failure
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "helm repo update failed"
              }
/instances:
  get: # slate app list
    description: List deployed application instances
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
      group:
        displayName: Virtual Organization
        type: string
        description: 
        required: false
      cluster:
        displayName: cluster
        type: string
        description: 
        required: false
    responses:
      200:
        description: List of installed applications
        body:
          application/json: !include InstanceListResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
      404:
        description: Group or cluster not found error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Group not found"
              }
  /{instance_id}:
    get:
      description: Get information about an application instance
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Success
          body:
            application/json:
              type: !include InstanceInfoResultSchema.json
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404:
          description: Instance not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Application instance not found"
                }
    delete: # slate app delete
      description: Delete an application instance
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
        force:
          displayName: Force
          type: boolean
          description: If set, delete the record of the instance even if there is a helm error deleting it from the kubernetes cluster
      responses:
        200:
          description: Successful deletion
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404:
          description: Instance not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Application instance not found"
                }
    /logs:
      get:
        description: get application logs
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
          max_lines:
            displayName: Result lines
            type: number
            description: Maximum lines of output to return. If zero, all lines will be returned. If unspecified, a default number will be returned. 
          container:
            displayName: Container
            type: string
            description: Name of container from which to return logs. If unspecified logs will be fetched from all containers. 
          previous:
            displayName: Previous logs
            type: string
            description: If specified, logs from previous container instances should be fetched, if they exist. 
        responses:
          200:
            description: Success
            body:
              application/json:
                type: !include InstanceLogResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Not authorized"
                  }
          404:
            description: Instance not found error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Application instance not found"
                  }
    /restart:
      put:
        description: restart application instance
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: Success
            body:
              application/json:
                type: !include AppInstallResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
          404:
            description: Instance not found error
            body:
              application/json:
                type: !include ErrorResultSchema.json
    /scale:
      get:
        description: check application instance replica count
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
          deployment:
            displayName: Deployment
            description: A specific deployment for which to query the scale
            type: string
            required: false
        responses:
          200:
            description: Success
            body:
              application/son:
                type: !include InstanceScaleResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
          404:
            description: Instance not found error
            body:
              application/json:
                type: !include ErrorResultSchema.json
      put:
        description: change application instance replica count
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
          replicas:
            displayName: Replicas
            description: Target number of replicas
            type: number
            required: true
          deployment:
            displayName: Deployment
            description: The deployment to be scaled
            type: string
            required: false
        responses:
          200:
            description: Success
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
          404:
            description: Instance not found error
            body:
              application/json:
                type: !include ErrorResultSchema.json
/secrets:
  get: # slate secret list
    description: List stored secrets
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
      group:
        displayName: Virtual Organization
        type: string
        description: 
        required: true
      cluster:
        displayName: cluster
        type: string
        description: 
        required: false
    responses:
      200:
        description: List of stored secrets
        body:
          application/json: !include SecretListResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
      404:
        description: Group or cluster not found error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Group not found"
              }
  post: # slate secret create
    description: Create a secret
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    body:
      application/json:
        type: !include SecretCreateRequestSchema.json
    responses:
      200:
        description: Success
        body:
          application/json:
            type: !include SecretCreateResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
      409:
        description: Name collision error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Secret name is already in use"
              }
  /{secretID}:
    get:
      description: Get information about a secret
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Normal success
          body:
            application/json: 
              type: !include SecretInfoResultSchema.json
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404:
          description: Secret not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Secret not found"
                }
    delete: # slate secret delete
      description: Destroy a secret
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
        force:
          displayName: Force
          type: boolean
          description: If set, delete the record of the secret even if there is an error deleting it from the kubernetes cluster
      responses:
        200:
          description: Normal success
          body:
            application/json:
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404:
          description: Secret not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Secret not found"
                }
/monitoring_credentials:
  get:
    description: List all monitoring credentials
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    responses:
      200:
        description: List of stored credentials
        body:
          application/json: !include MonitoringCredentialListResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
  post:
    description: Add a monitoring credential
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    body:
      application/json:
        type: !include MonitoringCedentialCreateRequestSchema.json
    responses:
      200:
        description: Success
      400:
        description: Input format error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Invalid JSON in request body"
              }
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
  /{accessKey}:
    delete:
      description: Destroy a credential
      queryParameters:
        token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Success
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404:
          description: Credential not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Monitoring credential not found"
                }
    /revoke:
      put:
        description: Revoke a credential
        queryParameters:
          token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: Success
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Not authorized"
                  }
          404:
            description: Credential not found error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Monitoring credential not found"
                  }
/multiplex:
  post:
    description: Execute multiple requests concurrently
    queryParameters:
      token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    body:
      application/json:
        type: !include MultiplexRequestSchema.json
    responses:
      200:
        decsription: Success
        body:
          application/json: !include MultiplexResultSchema.json
      400:
        description: Invalid input
        body:
          application/json:
            type: !include ErrorResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
